version: "3.9"

services:
  # VoltProjects Server
  server:
    image: voltstro/vpserver
    build:
      context: .
      dockerfile: VoltProjects.Server/Dockerfile
    container_name: vpserver
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__ServerConnection
      - Config__ObjectStorageProvider__Provider
      - Config__ObjectStorageProvider__ContainerName
      - Config__ObjectStorageProvider__BasePath
      - Config__ObjectStorageProvider__SubPath
      - Config__PublicUrl
      - Config__OpenIdConfig__Authority
      - Config__OpenIdConfig__ClientId
      - Config__OpenIdConfig__ClientSecret
      - VP_AZURE_CREDENTIAL
    depends_on:
      - database
      - azurite

  builder:
    image: voltstro/vpbuilder
    build:
      context: .
      dockerfile: VoltProjects.Builder/Dockerfile
    container_name: vpbuilder
    restart: unless-stopped
    environment:
      - ConnectionStrings__BuilderConnection
      - Config__ObjectStorageProvider__Provider
      - Config__ObjectStorageProvider__ContainerName
      - Config__ObjectStorageProvider__BasePath
      - Config__ObjectStorageProvider__SubPath
      - VP_AZURE_CREDENTIAL
    depends_on:
      - database
      - azurite

  database:
    image: postgres:17-alpine
    container_name: database
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ${PWD}/DevScripts/create-database.sh:/docker-entrypoint-initdb.d/create-database.sh
    ports:
      - 6000:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Testing123
      POSTGRES_DB: voltprojects
      PGDATA: /var/lib/postgresql/data

  azurite:
    build:
      context: ./DevScripts/azurite
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: azurite
    ports:
      - 10000:10000
    volumes:
      - azuritedata:/opt/azurite

volumes:
  pgdata:
  azuritedata:
