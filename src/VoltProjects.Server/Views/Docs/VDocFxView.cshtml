@using VoltProjects.Server.Models.View

@{
    void RenderToc(VDocFxViewModel.TocItem toc)
    {
        @if (toc.Name == null && toc.Href == null && toc.TocItems != null)
        {
            <ul>
                @foreach (VDocFxViewModel.TocItem item in toc.TocItems)
                {
                    RenderToc(item);
                }
            </ul>
            return;
        }
        
         <li>
            @if (toc.TocItems != null)
            {
                <i class="toggle">
                    <svg width="16" height="16" viewBox="0 0 16 16">
                        <path fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 14l6-6-6-6"></path>
                    </svg>
                </i>
            }
            <a href="@toc.Href">@toc.Name</a>
            @if (toc.TocItems != null)
            {
                <ul>
                    @foreach (VDocFxViewModel.TocItem item in toc.TocItems)
                    {
                        RenderToc(item);
                    }
                </ul>
            }
        </li>
    }
}
@model VoltProjects.Server.Models.View.VDocFxViewModel
@{
    ViewBag.Title = Model.Tile ?? Model.ProjectName;
}

@section TopInclude
{
    <link rel="stylesheet" href="~/assets/projectPage.css" />
}

@section BottomJs 
{
    <script type="module" src="~/js/projectPage.js"></script>
}

@section NavbarSecond
{
    <nav class="navbar navbar-expand-md border-top">
        <div class="container">
             <a class="navbar-brand" href="@Model.ProjectBasePath">@Model.ProjectName</a>
            <div class="collapse navbar-collapse" id="navbar">

                <ul class="navbar-nav flex-grow">
                    @if (Model.MenuItems != null)
                    {
                        foreach (VDocFxViewModel.MenuItem menuItem in Model.MenuItems)
                        {
                            <li>
                                <a class="nav-link" href="@menuItem.Href">@menuItem.Name</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </nav>
}

<div class="container layout-@Model.Layout page-type-@Model.PageType">
    @if (Model.Layout == "conceptual")
    {
        <nav class="layout-toc">
            <div class="sticky-top pt-2 navbar-expand-lg">
                <a class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#toc-pannel" aria-controls="toc-pannel" aria-expanded="false">
                    Table of Contents
                </a>
                <div class="collapse navbar-collapse" id="toc-pannel">
                    <div>
                        <div class="position-relative filter">
                            <i class="bi bi-funnel position-absolute filter-icon"></i>
                            <input class="form-control filter-control" type="text" id="toc-filter" placeholder="Filter" aria-label="Filter">
                        </div>
                        
                        <div class="toc" id="toc">
                            @if (Model.Toc != null)
                            {
                                RenderToc(Model.Toc);
                            }
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    }
    
    <article>
        @Html.Raw(Model.RawTitle)
        @Html.Raw(Model.Content)
    </article>

    <aside>
        <div class="sticky-top">
            @if (Model is { PageType: "conceptual",GitUrl: { } })
            {
                <a class="nav pb-2 edit-this-page" href="@Model.GitUrl">Improve this Doc</a>
                
            }
            @if (Model.Layout == "conceptual")
            {
                <nav id="in-this-article" class="in-this-article"></nav>
            }
        </div>
    </aside>
</div>
