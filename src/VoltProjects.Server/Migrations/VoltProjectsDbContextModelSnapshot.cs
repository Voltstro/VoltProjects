// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VoltProjects.Server.Services;

#nullable disable

namespace VoltProjects.Server.Migrations
{
    [DbContext(typeof(VoltProjectsDbContext))]
    partial class VoltProjectsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VoltProjects.Server.Models.DocBuilder", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DocBuilder");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.DocView", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DocView");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.PreBuildCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Arguments")
                        .HasColumnType("text");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProjectVersionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectVersionId");

                    b.ToTable("PreBuildCommand");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GitBranch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GitUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IconPath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.ProjectBuildEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GitHash")
                        .IsRequired()
                        .HasMaxLength(41)
                        .HasColumnType("character varying(41)");

                    b.Property<int>("ProjectVersionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectVersionId");

                    b.ToTable("ProjectBuildEvent");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.ProjectLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectLanguage");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.ProjectVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocBuilderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocViewId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocsBuiltPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocsPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("VersionTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DocBuilderId");

                    b.HasIndex("DocViewId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectVersion");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.PreBuildCommand", b =>
                {
                    b.HasOne("VoltProjects.Server.Models.ProjectVersion", "ProjectVersion")
                        .WithMany()
                        .HasForeignKey("ProjectVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectVersion");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.ProjectBuildEvent", b =>
                {
                    b.HasOne("VoltProjects.Server.Models.ProjectVersion", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.ProjectLanguage", b =>
                {
                    b.HasOne("VoltProjects.Server.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltProjects.Server.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("VoltProjects.Server.Models.ProjectVersion", b =>
                {
                    b.HasOne("VoltProjects.Server.Models.DocBuilder", "DocBuilder")
                        .WithMany()
                        .HasForeignKey("DocBuilderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltProjects.Server.Models.DocView", "DocView")
                        .WithMany()
                        .HasForeignKey("DocViewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltProjects.Server.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocBuilder");

                    b.Navigation("DocView");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
